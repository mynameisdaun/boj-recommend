<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.daun.word.domain.study.domain.repository.StudyRepository">

    <resultMap id="studyMap" type="Study">
        <constructor>
            <idArg column="id" name="globalId"/>
            <arg column="leader" name="leader" javaType="Member"
                 select="com.daun.word.domain.member.domain.repository.MemberRepository.findByEmail"/>
            <arg column="study_name" name="studyName" javaType="Name" typeHandler="NameTypeHandler"/>
            <arg column="hash" name="hash"/>
            <arg column="id" name="members" javaType="List" select="findStudyMembers"/>
            <arg column="delete_yn" name="deleteYn" javaType="YesNo" typeHandler="YesNoTypeHandler"/>
            <arg column="created_at" name="createdAt" javaType="LocalDateTime"/>
            <arg column="updated_at" name="updatedAt" javaType="LocalDateTime"/>
        </constructor>
    </resultMap>

    <select id="findStudyMembers" resultMap="com.daun.word.domain.member.domain.repository.MemberRepository.memberMap">
        /* email로 회원 조회 */
        SELECT m.id,
               m.email,
               m.password,
               m.name,
               m.tier,
               m.social_type,
               m.login_count,
               m.last_login_at,
               m.created_at,
               m.updated_at
        FROM study_member sm
                 left join member m on sm.email = m.email
        WHERE sm.study_id = #{globalId}
    </select>

    <select id="findById" resultMap="studyMap">
        SELECT s.id,
               s.leader,
               s.study_name,
               s.hash,
               s.delete_yn,
               s.created_at,
               s.updated_at
        FROM study s
        where s.id = ${globalId.value}
          and s.delete_yn = 'N'
    </select>

    <insert id="save" parameterType="Study" useGeneratedKeys="true" keyColumn="id" keyProperty="study.globalId">
        INSERT INTO study
        (
        leader,
        study_name,
        hash,
        delete_yn
        <if test="study.globalId != null">
            ,id
        </if>
        )
        VALUES
        (
        #{study.leader.email},
        #{study.studyName},
        #{study.hash},
        #{study.deleteYn}
        <if test="study.globalId != null">
            ,#{study.globalId}
        </if>
        )
        ON DUPLICATE KEY UPDATE
        leader = #{study.leader.email},
        study_name = #{study.studyName},
        hash = #{study.hash},
        delete_yn = #{study.deleteYn},
        updated_at = sysdate()
        <selectKey keyColumn="globalId,created_at,updated_at"
                   keyProperty="study.globalId,study.createdAt,study.updatedAt"
                   resultType="java.util.HashMap" order="AFTER">
            SELECT s.globalId,
            s.created_at,
            s.updated_at
            FROM study s
            where s.globalId =
            <if test="study.globalId != null">
                #{study.globalId}
            </if>
            <if test="study.globalId == null">
                LAST_INSERT_ID()
            </if>
        </selectKey>
    </insert>

    <insert id="saveStudyMember">
        INSERT INTO study_member
        (study_id,
         email,
         delete_yn)
        VALUES (#{studyGlobalId.value},
                #{member.email},
                    #{deleteYn}) ON DUPLICATE KEY
        UPDATE study_id = #{studyGlobalId.value},
            email = #{member.email},
            delete_yn = #{deleteYn},
            updated_at = sysdate()
    </insert>
</mapper>

<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.daun.word.domain.assignment.domain.repository.PAssignmentRepository">

    <resultMap id="tagMap" type="com.daun.word.domain.problem.domain.vo.Tag">
        <constructor>
            <idArg column="id" name="id"/>
            <arg column="tag_key" name="key" javaType="String"/>
            <arg column="title" name="title" javaType="com.daun.word.global.vo.Title"
                 typeHandler="com.daun.word.global.vo.TitleTypeHandler"/>
            <arg column="created_at" name="createdAt" javaType="java.time.LocalDateTime"/>
            <arg column="updated_at" name="updatedAt" javaType="java.time.LocalDateTime"/>
        </constructor>
    </resultMap>

    <resultMap id="problemMap" type="com.daun.word.domain.problem.domain.Problem">
        <constructor>
            <idArg column="id" name="id"/>
            <arg column="title" name="title" javaType="com.daun.word.global.vo.Title"
                 typeHandler="com.daun.word.global.vo.TitleTypeHandler"/>
            <arg column="url" name="url" javaType="com.daun.word.global.vo.URL"
                 typeHandler="com.daun.word.global.vo.URLTypeHandler"/>
            <arg column="tier" name="tier" javaType="com.daun.word.domain.problem.domain.vo.Tier"
                 typeHandler="com.daun.word.domain.problem.domain.vo.TierTypeHandler"/>
            <arg column="id" name="tags" javaType="java.util.List" select="findTags"/>
            <arg column="created_at" name="createdAt" javaType="java.time.LocalDateTime"/>
            <arg column="updated_at" name="updatedAt" javaType="java.time.LocalDateTime"/>
        </constructor>
    </resultMap>

    <resultMap id="assignmentMap" type="com.daun.word.domain.assignment.domain.PAssignment">
        <constructor>
            <idArg column="id" name="id" javaType="int"/>
            <arg column="problem_id" name="problem" javaType="com.daun.word.domain.problem.domain.Problem"
                 select="findProblem"/>
            <arg column="assign_from" name="assignFrom" javaType="com.daun.word.domain.member.domain.vo.Email"
                 typeHandler="com.daun.word.domain.member.domain.vo.EmailTypeHandler"/>
            <arg column="assign_to" name="assignTo" javaType="com.daun.word.domain.member.domain.vo.Email"
                 typeHandler="com.daun.word.domain.member.domain.vo.EmailTypeHandler"/>
            <arg column="start_date_time" name="startDateTime" javaType="java.time.LocalDateTime"/>
            <arg column="end_date_time" name="endDateTime" javaType="java.time.LocalDateTime"/>
            <arg column="open_yn" name="openYn" javaType="String"/>
            <arg column="open_date_time" name="openDateTime" javaType="java.time.LocalDateTime"/>
            <arg column="complete_yn" name="completeYn" javaType="String"/>
            <arg column="complete_date_time" name="completeDateTime" javaType="java.time.LocalDateTime"/>
            <arg column="created_at" name="createdAt" javaType="java.time.LocalDateTime"/>
            <arg column="updated_at" name="updatedAt" javaType="java.time.LocalDateTime"/>
        </constructor>
    </resultMap>

    <select id="findTags" resultMap="tagMap">
        SELECT t.id,
               t.tag_key,
               t.title,
               t.created_at,
               t.updated_at
        FROM problem_tag pt
                 left join problem p on pt.problem_id = p.id
                 left join tag t on pt.tag_id = t.id
        where p.id = ${id}
    </select>

    <select id="findProblem" resultMap="problemMap">
        SELECT p.id,
               p.title,
               p.url,
               p.tier,
               p.created_at,
               p.updated_at
        FROM problem p
        where p.id = ${problem_id}
    </select>

    <select id="findById" resultMap="assignmentMap">
        select a.id                 as id,
               a.assign_from        as assign_from,
               a.assign_to          as assign_to,
               a.start_date_time    as start_date_time,
               a.end_date_time      as end_date_time,
               a.open_yn            as open_yn,
               a.open_date_time     as open_date_time,
               a.complete_yn        as complete_yn,
               a.complete_date_time as complete_date_time,
               a.created_at         as created_at,
               a.updated_at         as updated_at,
               p.id                 as problem_id,
               p.title              as problem_title,
               p.url                as problem_url,
               p.tier               as problem_tier,
               p.created_at         as problem_created_at,
               p.updated_at         as problem_updated_at
        from p_assignment as a
                 left join problem p on a.problem_id = p.id
        where a.id = #{id.value};
    </select>

    <insert id="save" parameterType="com.daun.word.domain.assignment.domain.PAssignment" useGeneratedKeys="true"
            keyColumn="id" keyProperty="assignment.id">
        INSERT INTO p_assignment
        (
        <if test="assignment.id != null">
            id,
        </if>
        problem_id,
        assign_from,
        assign_to,
        start_date_time,
        end_date_time
        )
        VALUES (
        <if test="assignment.id != null">
            #{assignment.id},
        </if>
        #{assignment.problem.id},
        #{assignment.assignFrom.value},
        #{assignment.assignTo.value},
        #{assignment.startDateTime},
        #{assignment.endDateTime}
        )
        ON DUPLICATE KEY
        UPDATE
        problem_id = #{assignment.problem.id},
        assign_from = #{assignment.assignFrom.value},
        assign_to = #{assignment.assignTo.value},
        start_date_time = #{assignment.startDateTime},
        end_date_time = #{assignment.endDateTime},
        open_yn = #{assignment.openYn},
        open_date_time = #{assignment.openDateTime},
        complete_yn = #{assignment.completeYn},
        complete_date_time = #{assignment.completeDateTime},
        updated_at = sysdate()
        <selectKey keyColumn="id,open_yn,open_date_time,complete_yn,complete_date_time,created_at,updated_at"
                   keyProperty="assignment.id,assignment.openYn,assignment.openDateTime,assignment.completeYn,assignment.completeDateTime,assignment.createdAt,assignment.updatedAt"
                   resultType="java.util.HashMap" order="AFTER">
            SELECT assignment.id,
            assignment.open_yn,
            assignment.open_date_time,
            assignment.complete_yn,
            assignment.complete_date_time,
            assignment.created_at,
            assignment.updated_at
            FROM p_assignment as assignment
            WHERE assignment.id =
            <if test="assignment.id != null">
                #{assignment.id}
            </if>
            <if test="assignment.id == null">
                LAST_INSERT_ID()
            </if>
        </selectKey>
    </insert>
</mapper>

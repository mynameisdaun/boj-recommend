<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.daun.word.oauth.token.domain.repository.TokenRepository">
    <insert id="save" parameterType="com.daun.word.oauth.token.domain.Token">
        /* 토큰 생성 */
        INSERT INTO token
        (
            member_id,
            access_token,
            access_token_expired_date,
            refresh_token,
            refresh_token_expired_date,
            member_social_type,
            social_access_token,
            social_access_token_expired_date,
            social_refresh_token,
            social_refresh_token_expired_date
        )
        VALUES
        (
            #{memberId},
            #{accessToken},
            #{accessTokenExpiredDate},
            #{refreshToken},
            #{refreshTokenExpiredDate},
            #{memberSocialType},
            #{socialAccessToken},
            #{socialAccessTokenExpiredDate},
            #{socialRefreshToken},
            #{socialRefreshTokenExpiredDate}
        )
        ON DUPLICATE KEY UPDATE
            access_token = #{accessToken},
            access_token_expired_date = #{accessTokenExpiredDate},
            refresh_token = #{refreshToken},
            refresh_token_expired_date = #{refreshTokenExpiredDate},
            member_social_type = #{memberSocialType},
            social_access_token = #{socialAccessToken},
            social_access_token_expired_date = #{socialAccessTokenExpiredDate},
            social_refresh_token = #{socialRefreshToken},
            social_refresh_token_expired_date = #{socialRefreshTokenExpiredDate}
        <selectKey keyColumn="createdAt,updatedAt" keyProperty="createdAt,updatedAt"
                   resultType="java.util.HashMap" order="AFTER">
            SELECT created_at as createdAt,
                   updated_at as updatedAt
              FROM token
             WHERE token.member_id =#{memberId}
        </selectKey>
    </insert>

    <select id="getTokenByMemberId" resultType="com.daun.word.oauth.token.domain.Token">
        /* 멤버 ID(구분값)으로 토큰 조회 */
        SELECT member_id,
               access_token,
               access_token_expired_date,
               refresh_token,
               refresh_token_expired_date,
               member_social_type,
               social_access_token,
               social_access_token_expired_date,
               social_refresh_token,
               social_refresh_token_expired_date,
               created_at,
               updated_at
        FROM token
        where token.member_id = #{memberId}
    </select>
</mapper>

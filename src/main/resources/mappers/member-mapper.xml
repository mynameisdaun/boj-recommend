<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.daun.word.domain.member.domain.repository.MemberRepository">

    <resultMap id="memberMap" type="Member">
        <constructor>
            <idArg column="id" name="id"/>
            <arg column="email" name="email" javaType="Email"/>
            <arg column="password" name="password"/>
            <arg column="nickname" name="nickname" javaType="Nickname"/>
            <arg column="tier" name="tier" javaType="Tier"/>
            <arg column="social_type" name="socialType" javaType="SocialType"/>
            <arg column="login_count" name="loginCount"/>
            <arg column="last_login_at" name="lastLoginAt" javaType="LocalDateTime"/>
            <arg column="created_at" name="createdAt" javaType="LocalDateTime"/>
            <arg column="updated_at" name="updatedAt" javaType="LocalDateTime"/>
        </constructor>
    </resultMap>

    <select id="findByEmail" resultMap="memberMap">
        /* email로 회원 조회 */
        SELECT m.id,
               m.email,
               m.password,
               m.nickname,
               m.tier,
               m.social_type,
               m.login_count,
               m.last_login_at,
               m.created_at,
               m.updated_at
        FROM member m
        WHERE m.email = #{email}
    </select>

    <insert id="save" parameterType="Member" useGeneratedKeys="true" keyColumn="id" keyProperty="id">
        INSERT INTO member
        (
        <if test="member.id != null">
            id,
        </if>
        email,
        password,
        nickname,
        tier,
        social_type
        )
        VALUES
        (
        <if test="member.id != null">
            #{member.id},
        </if>
        #{member.email},
        #{member.password},
        #{member.nickname},
        #{member.tier},
        #{member.socialType}
        )
        ON DUPLICATE KEY
        UPDATE
        email = #{member.email},
        password = #{member.password},
        nickname = #{member.nickname},
        tier = #{member.tier},
        social_type = #{member.socialType},
        login_count = #{member.loginCount},
        last_login_at = #{member.lastLoginAt},
        updated_at = sysdate()
        <selectKey
                keyColumn="id,created_at,updated_at"
                keyProperty="member.id,member.createdAt,member.updatedAt"
                resultType="java.util.HashMap" order="AFTER">
            SELECT
            m.id,
            m.created_at,
            m.updated_at
            FROM member m
            where m.id =
            <if test="member.id != null">
                #{member.id}
            </if>
            <if test="member.id == null">
                LAST_INSERT_ID()
            </if>
        </selectKey>
    </insert>
</mapper>

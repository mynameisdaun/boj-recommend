<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.daun.word.domain.member.domain.repository.MemberRepository">

    <select id="findByEmail" resultType="com.daun.word.domain.member.domain.Member">
        /* email로 회원 조회 */
        SELECT member.id          as id,
               member.email       as email,
               member.password    as password,
               member.nickname    as nickname,
               member.social_type as socialType,
               member.created_at  as createdAt,
               member.updated_at  as updatedAt
        FROM member
        WHERE member.email = #{email.value}
    </select>

    <insert id="save" parameterType="com.daun.word.domain.member.domain.Member" useGeneratedKeys="true" keyColumn="id"
            keyProperty="id">
        INSERT INTO member
        (
        email,
        password,
        nickname,
        social_type
        )
        VALUES
        (
        #{member.email.value},
        #{member.password},
        #{member.nickname.value},
        #{member.socialType.name}
        )
        <selectKey keyColumn="id,created_at,updated_at" keyProperty="member.id,member.createdAt,member.updatedAt"
                   resultType="java.util.HashMap" order="AFTER">
            SELECT member.id,
            member.created_at,
            member.updated_at
            FROM member
            where member.id = LAST_INSERT_ID();
        </selectKey>
    </insert>

    <update id="update" parameterType="com.daun.word.domain.member.domain.Member">
        UPDATE member
           SET email = #{member.email.value},
               password = #{member.password},
               nickname = #{member.nickname.value},
               social_type = #{member.socialType.name},
               login_count = #{member.loginCount},
               last_login_at = #{member.lastLoginAt},
               updated_at = current_timestamp
         WHERE id = #{member.id}
        <selectKey
                keyColumn="id,updated_at"
                keyProperty="member.id,member.updatedAt"
                resultType="java.util.HashMap" order="AFTER">
           select member.id,
                  member.updated_at
            from  member
            WHERE id = #{member.id}
        </selectKey>
    </update>
</mapper>

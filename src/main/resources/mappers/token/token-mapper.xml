<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.daun.word.oauth.token">
    <insert id="createToken" parameterType="com.daun.word.oauth.token.dto.TokenDTO">
        /* 토큰 생성 */
        INSERT INTO token
        (
             access_token,
             access_token_expired_date,
             refresh_token,
             refresh_token_expired_date,
             member_social_type,
             social_access_token,
             social_access_token_expired_date,
             social_refresh_token,
             social_refresh_token_expired_date
         )
        VALUES
        (
            #{memberId},
            #{accessToken},
            #{accessTokenExpiredDate},
            #{refreshToken},
            #{refreshTokenExpiredDate},
            #{memberSocialType},
            #{socialAccessToken},
            #{socialAccessTokenExpiredDate},
            #{socialRefreshToken},
            #{socialRefreshTokenExpiredDate}
        )
        <selectKey resultType="Integer" keyProperty="memberId" order="AFTER">
            SELECT LAST_INSERT_ID()
        </selectKey>
    </insert>
    <select id="getTokenByMemberId" resultType="com.daun.word.oauth.token.dto.TokenDTO">
        /* 멤버 ID(구분값)으로 토큰 조회 */
        SELECT member_id,
               access_token,
               access_token_expired_date,
               refresh_token,
               refresh_token_expired_date,
               member_social_type,
               social_access_token,
               social_access_token_expired_date,
               social_refresh_token,
               social_refresh_token_expired_date,
               created_at,
               updated_at
        FROM token
        where token.member_id = #{memberId}
    </select>
</mapper>
